<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName"  xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- default-autowire="byName" <context:component-scan base-package="com"/>-->
	<context:component-scan base-package="com"/>

	<bean id="userDao" class="com.saas.dao.impl.UserInfoDAOimpl" >
			<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="downloadDao" class="com.saas.dao.impl.DownloadInfoDAOimpl" >
			<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="tenantDao" class="com.saas.dao.impl.TenantInfoDAOimpl" >
			<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!-- 1.配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://grd-dsgn.cpkj9e7ce4ny.us-west-2.rds.amazonaws.com:3306/tenant"></property>
		<property name="user" value="pipilili"></property>
		<property name="password" value="Pipilili0213xml"></property>
		<property name="maxIdleTime" value="1800"></property> 
		  <property name="preferredTestQuery" value="SELECT 1"/>  
		  <property name="idleConnectionTestPeriod" value="18000"/>  
		  <property name="testConnectionOnCheckout" value="true"/> 
	</bean>
	
	
	
	<!-- 2.配置hibernatede sessionFactory实例 这个bean由spring提供LocalSessionFactoryBean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<property name="annotatedClasses">
			<list>
				<value>com.saas.po.UserInfo</value>
				<value>com.saas.po.TenantInfo</value>
			</list>
		</property>		
		<!-- 配置hibernate配置文件的位置和名称 -->
	 	<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	 	<!-- 配置hibernate映射文件 -->
	 	<property name="mappingLocations" value="classpath:com/saas/po/*.hbm.xml"></property>
	</bean>
	
	<!-- 配置spring声明时事务 -->
	<!-- 3. 配置事务管理器 有spring提供 HibernateTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 4. 通知 配置事务属性，需要事务管理器transactionManager -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 事务的传播属性 -->
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="login*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="down*" read-only="true" />
			<tx:method name="ad*" propagation="REQUIRED" />
			<tx:method name="updat*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 5. 配置事务的切点 AOP ,并把切点和事务属性关联起来	 -->
	<aop:config>
		<!-- 配置切点 -->
		<aop:pointcut expression="execution(* com.saas.service.impl.*.*(..))" id="pointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
	</aop:config>
	
</beans>
